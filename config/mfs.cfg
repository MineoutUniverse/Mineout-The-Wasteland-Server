# Configuration file

clientconfig {
    # How long (in ticks) it takes before control surfaces try to return to their natural angle.  
    # This is not used when using a joystick.
    I:ControlSurfaceCooldown=4

    # Is the starter enabled? 
    # If not, players must hit propellers to start them
    B:ElectricStart=true

    # Credits screen is displayed if this is the first run.
    B:FirstRun=true

    # How much planes will try to correct themselves when they get a sync packet.  
    # This is intended to gradually sync airborne planes so they don't get out of the sync threshold and get force-synced.
    D:IncrementalMovement=0.01

    # Dead zone for joystick axis.  
    # MFS will always use the greater of this value and the value provided by the computer.
    D:JoystickDeadZone=0.03

    # Factor by which joystick inputs are multiplied.  
    # This controls how quickly the control surfaces change.
    I:JoystickForceFactor=15

    # Does altimiter read zero at Y=64 instead of Y=0?
    B:SeaLevelOffset=false

    # How many blocks or degrees out-of-sync a plane can be on a client before it will be forced to re-sync.  
    # Higher values cause less jittering but increase the chance that an entity can get out of sync.  
    # You can keep this value as it is, but consider making it lower if you are on a server with fast planes.
    I:SyncThreshold=5

    # Whether or not the throttle can be put to zero and kill the engine.  
    # Only valid for joysticks.
    B:ThrottleKills=false
}


fuels {
    D:aerotheum=0.0
    D:biofuel=0.0
    D:brine=0.0
    D:chlorine=0.0
    D:chocolatemilk=0.0
    D:coal=0.0
    D:cryotheum=0.0
    D:cyanite=0.0
    D:deuterium=0.0
    D:ender=0.0
    D:ethene=0.0
    D:fuel=0.0
    D:fuelcolumn=0.0
    D:fusionfueldt=0.0
    D:glowstone=0.0
    D:heavywater=0.0
    D:hydrogen=0.0
    D:hydrogenchloride=0.0
    D:ic2biogas=0.0
    D:ic2biomass=0.0
    D:ic2constructionfoam=0.0
    D:ic2coolant=0.0
    D:ic2distilledwater=0.0
    D:ic2hotcoolant=0.0
    D:ic2hotwater=0.0
    D:ic2pahoehoelava=0.0
    D:ic2steam=0.0
    D:ic2superheatedsteam=0.0
    D:ic2uumatter=0.0
    D:lava=1.0
    D:lithium=0.0
    D:mana=0.0
    D:meat=0.0
    D:melonjuice=0.0
    D:milk=0.0
    D:mobessence=0.0
    D:mushroomsoup=0.0
    D:oil=0.0
    D:ooze=0.0
    D:oxygen=0.0
    D:petrotheum=0.0
    D:pinkslime=0.0
    D:purelava=0.0
    D:pyrotheum=0.0
    D:redplasma=0.0
    D:redstone=0.0
    D:sewage=0.0
    D:sludge=0.0
    D:sodium=0.0
    D:steam=0.0
    D:sulfurdioxidegas=0.0
    D:sulfuricacid=0.0
    D:sulfurtrioxidegas=0.0
    D:tritium=0.0
    D:water=0.0
    D:yellorium=0.0
}


general {
    # Factor for damage caused by plane crashes.
    D:CrashDamageFactor=1.0

    # Factor times which engines use fuel.  
    # Change this if you think engines use fuel too fast or slow.
    D:FuelUsageFactor=1.0

    # Any item that contains these words will be counted as heavy (double mass) when considering plane mass.  
    # Change and tweak to your liking.
    S:HeavyItems=diamond, iron, gold, coal, ore, stone

    # Factor to apply to plane movement.  
    # 1 is the realistic value, but this makes planes move too fast for Minecraft. Adjust with caution.
    D:PlaneSpeedFactor=0.5

    # Factor for damage caused by a propeller.
    D:PropellerDamageFactor=1.0

    # How often (in ticks) planes sync themselves.  
    # This will control how often the server sends a sync packet with plane information.  
    # Note that just because the server sends a packet doesn't mean that the client will sync.  
    # That depends on the client's PositionThreshold and IncrementalMovement value.
    I:SyncDelay=5
}


